name: CI/CD Pipeline with Docker & Vercel

on:
  push:
    paths:
      - 'book-reads/**'  # Only trigger when changes happen in book-reads/
  pull_request:
    paths:
      - 'book-reads/**'  # Only trigger on PRs related to book-reads/

jobs:
  test:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Backend Dependencies
        working-directory: book-reads/backend
        run: npm install

      - name: Apply Migrations to Test Database
        working-directory: book-reads/backend
        env:
          DATABASE_URL: "postgresql://test_user:${{ secrets.TEST_DB_PASSWORD }}@localhost:5432/test_db"
        run: npx prisma migrate dev --name ci_test

      - name: Run Backend Tests
        working-directory: book-reads/backend
        env:
          DATABASE_URL: "postgresql://test_user:${{ secrets.TEST_DB_PASSWORD }}@localhost:5432/test_db"
        run: npm test

  build-and-push:
    name: Build & Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest ./book-reads/backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest

  deploy-frontend:
    name: Deploy Frontend to Vercel
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          cd book-reads/frontend
          vercel --prod --yes --token $VERCEL_TOKEN
